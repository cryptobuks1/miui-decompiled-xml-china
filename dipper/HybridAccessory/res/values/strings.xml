<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="abc_action_bar_home_description">Navigate home</string>
    <string name="abc_action_bar_home_description_format">%1$s, %2$s</string>
    <string name="abc_action_bar_home_subtitle_description_format">%1$s, %2$s, %3$s</string>
    <string name="abc_action_bar_up_description">Navigate up</string>
    <string name="abc_action_menu_overflow_description">More options</string>
    <string name="abc_action_mode_done">Done</string>
    <string name="abc_activity_chooser_view_see_all">See all</string>
    <string name="abc_activitychooserview_choose_application">Choose an app</string>
    <string name="abc_capital_off">OFF</string>
    <string name="abc_capital_on">ON</string>
    <string name="abc_search_hint">Search…</string>
    <string name="abc_searchview_description_clear">Clear query</string>
    <string name="abc_searchview_description_query">Search query</string>
    <string name="abc_searchview_description_search">Search</string>
    <string name="abc_searchview_description_submit">Submit query</string>
    <string name="abc_searchview_description_voice">Voice search</string>
    <string name="abc_shareactionprovider_share_with">Share with</string>
    <string name="abc_shareactionprovider_share_with_application">Share with %s</string>
    <string name="abc_toolbar_collapse_description">Collapse</string>
    <string name="search_menu_title">Search</string>
    <string name="status_bar_notification_info_overflow">999+</string>
    <string name="app_name">Mi Smart Scenes</string>
    <string name="guide_page_agree_protocol_tip">"I've read and agreed to "<a href="http://g.o2o.hybrid.xiaomi.com/statement/"> \"Mi Smart Scenes Privacy Policy\".</a></string>
    <string name="guide_page_enable_btn_text">Turn on</string>
    <string name="guide_page_enable_tip">Turned on Mi Smart Scenes successfully</string>
    <string name="guide_page_tip1_message">We walk past shops, transport hubs, museums and restaurants every day. Having store maps, promotional info, and train schedules on your screen right when you need them would save a great deal of time. Turn on Mi Smart Scenes to receive suggestions about the services nearby based on your location.</string>
    <string name="guide_page_tip1_title">Mi Smart Scenes suggests services based on your location</string>
    <string name="guide_page_tip2_message">Mi Smart Scenes makes a quick app with available options appear on your screen whenever you approach a store, restaurant, or other service point. For example, you can see all the offers and deals when you enter a shop, or start ordering before you even get to the table in a café. Quick apps work much better than web pages and require no installaion.</string>
    <string name="guide_page_tip2_title">Walk into a store and see the options available to you right on your screen</string>
    <string name="o2o_activity_title">Mi Smart Scenes</string>
    <string name="o2o_auth_notification_channel_desc">Receive notifications about requested permissions</string>
    <string name="o2o_auth_notification_channel_name">Permissions</string>
    <string name="o2o_auth_notification_text">Receive suggestions about services nearby</string>
    <string name="o2o_auth_notification_title">Try Mi Smart Scenes</string>
    <string name="o2o_scene_notification_channel_desc">Receive notifications about services nearby</string>
    <string name="o2o_scene_notification_channel_name">Services</string>
    <string name="o2o_scene_notification_close">Close</string>
    <string name="settings_page_pref_authorize_state_summary">Receive suggestions about services nearby based on your location</string>
    <string name="settings_page_pref_authorize_state_title">Mi Smart Scenes</string>
    <string name="settings_page_pref_goto_guide_fragment">Tutorial</string>
    <string name="settings_page_pref_view_private_protocol_title">Mi Smart Scenes Privacy Policy</string>
    <string name="short_cut_dialog_cancel_button_text">No</string>
    <string name="short_cut_dialog_cotent">The following apps can be used without installation. Save shortcuts?</string>
    <string name="short_cut_dialog_create_button_text">Yes</string>
    <string name="short_cut_dialog_not_tip_check_box">"Don't remind again in 2 weeks"</string>
    <string name="short_cut_dialog_title">Create shortcut</string>
    <string name="abc_font_family_body_1_material">sans-serif</string>
    <string name="abc_font_family_body_2_material">sans-serif-medium</string>
    <string name="abc_font_family_button_material">sans-serif-medium</string>
    <string name="abc_font_family_caption_material">sans-serif</string>
    <string name="abc_font_family_display_1_material">sans-serif</string>
    <string name="abc_font_family_display_2_material">sans-serif</string>
    <string name="abc_font_family_display_3_material">sans-serif</string>
    <string name="abc_font_family_display_4_material">sans-serif-light</string>
    <string name="abc_font_family_headline_material">sans-serif</string>
    <string name="abc_font_family_menu_material">sans-serif</string>
    <string name="abc_font_family_subhead_material">sans-serif</string>
    <string name="abc_font_family_title_material">sans-serif-medium</string>
    <string name="geek_sdk_log_add_ap_cache">diff添加ap缓存</string>
    <string name="geek_sdk_log_add_current_connected_ssid_to_map">将当前连接的WiFi加入到进店逻辑的判断里</string>
    <string name="geek_sdk_log_add_request_list">将%1$s添加到预请求列表</string>
    <string name="geek_sdk_log_add_ssid_to_map">将%1$s加入到进店逻辑的判断里</string>
    <string name="geek_sdk_log_after_filter_all_resident_scene_wifi_no_has_other_wifi">去除所有驻店的WiFi后,已经没有其他WiFi</string>
    <string name="geek_sdk_log_after_filter_black_scene_wifi_no_has_other_wifi">去除黑名单的WiFi后,已经没有其他WiFi</string>
    <string name="geek_sdk_log_after_filter_duplicate_wifi_no_has_other_wifi">去除重复的WiFi后,已经没有其他WiFi</string>
    <string name="geek_sdk_log_after_filter_resident_ssid_wifi_no_has_other_wifi">去除驻店的Ssid后,已经没有其他WiFi</string>
    <string name="geek_sdk_log_already_all_leave_shop_but_switch_logic_work_continue_to_work_switch">已经全部离店,但是此时切换逻辑还在进行着,继续走完切换逻辑</string>
    <string name="geek_sdk_log_ap_cache_file_data_is_null">ap缓存文件数据为空</string>
    <string name="geek_sdk_log_ap_cache_file_encryption_and_decryption_error">ap缓存文件加解密出错</string>
    <string name="geek_sdk_log_ap_data_cache_file_error">[ap缓存]列表 position = %1$s , value = null</string>
    <string name="geek_sdk_log_ap_data_city_change">[ap缓存]由城市(city=%1$s)切换为城市(city=%2$s)</string>
    <string name="geek_sdk_log_ap_data_response">拉取ApData缓存:%1$s</string>
    <string name="geek_sdk_log_ap_data_response_city_and_request_city_not_same">[ap缓存]返回缓存城市(city=%1$s)与请求城市(city=%2$s)不一致或者等于0</string>
    <string name="geek_sdk_log_ap_diff_data_response">拉取ApDiffData缓存:%1$s</string>
    <string name="geek_sdk_log_ap_diff_data_version_not_change">[ap缓存]增量更新时，版本号没有变化</string>
    <string name="geek_sdk_log_ap_file_damage_request_server">ap缓存文件已经损坏,重新请求服务器</string>
    <string name="geek_sdk_log_ap_in_db_ap_cache">本地数据库有WiFi:%1$s[%2$s]</string>
    <string name="geek_sdk_log_ap_in_db_ssid_cache">本地数据库有SSID:%1$s</string>
    <string name="geek_sdk_log_ap_memory_data">[ap缓存(内存)]%1$s</string>
    <string name="geek_sdk_log_ap_no_in_db_ap_cache">本地数据无WiFi:%1$s[%2$s]</string>
    <string name="geek_sdk_log_ap_no_in_db_ssid_cache">本地数据库无SSID:%1$s</string>
    <string name="geek_sdk_log_ap_null_reassign_the_value">当前的scanResult为null,把上次WiFi回调的scanResult的值重新赋给当前的scanResult</string>
    <string name="geek_sdk_log_better_wifi_found">发现信号强度大于%1$d的WiFi</string>
    <string name="geek_sdk_log_better_wifi_not_found">没找到信号强度大于%1$d的WiFi</string>
    <string name="geek_sdk_log_bluetooth_not_enable">[蓝牙停止扫描]蓝牙功能未开启</string>
    <string name="geek_sdk_log_bluetooth_not_support">[蓝牙]该设备不支持低功耗蓝牙</string>
    <string name="geek_sdk_log_cache_data_context_null">[断点下载]获取context为空</string>
    <string name="geek_sdk_log_cache_data_download_error">[断点下载]缓存下载异常errorMessage:%1$s</string>
    <string name="geek_sdk_log_cache_data_download_request_fail">[断点下载]请求失败,code:%1$s</string>
    <string name="geek_sdk_log_cache_data_download_write_fail">[断点下载]写入文件出错,errorMessage:%1$s,直接读取文件内容</string>
    <string name="geek_sdk_log_cache_data_downloaded">[断点下载]之前下载过该文件,直接读取文件内容</string>
    <string name="geek_sdk_log_cache_data_file_decrypt_error">缓存文件解密错误,errorMessage:%1$s</string>
    <string name="geek_sdk_log_cache_data_get_cache_folder_fail">[断点下载]获取缓存路径失败,直接下载</string>
    <string name="geek_sdk_log_cache_data_no_has_this_scene_to_request_server">缓存中无%1$s对应的场景,因此从服务器获取</string>
    <string name="geek_sdk_log_cache_data_parse_error">[缓存]json解析错误%1$s为null</string>
    <string name="geek_sdk_log_cache_data_verify_file">[断点下载]校验文件%1$s</string>
    <string name="geek_sdk_log_cache_data_version_not_same_content_same">[缓存]明文数据一致,直接更新版本号</string>
    <string name="geek_sdk_log_cache_download_ap_data">[ap缓存]下载全量ap缓存</string>
    <string name="geek_sdk_log_cache_download_ap_diff_data">[ap缓存]下载增量ap缓存</string>
    <string name="geek_sdk_log_cache_file_not_exists">当前缓存文件不存在,文件名:%1$s</string>
    <string name="geek_sdk_log_cache_folder_not_exists">当前缓存文件夹不存在</string>
    <string name="geek_sdk_log_calculate_result">计算结果,第一个样本的模:%1$f,第二个样本的模:%2$f,数量积:%3$d</string>
    <string name="geek_sdk_log_calculate_result_error">当计算结果异常时,视为静止</string>
    <string name="geek_sdk_log_calculate_sqrt_average_time_more_than_two_min_to_stop_check">计算平均方差时间超过2分钟,停止检测</string>
    <string name="geek_sdk_log_callback_count">周期数:%1$d,wifi回调次数:%2$d</string>
    <string name="geek_sdk_log_caught_exception_and_remove_it">捕捉到线程[%1$s]异常,并且从线程列表中移除</string>
    <string name="geek_sdk_log_caught_same_exception_so_ignore">捕捉异常时,出现的异常和之前的相同,因此忽略处理</string>
    <string name="geek_sdk_log_cell_cache_content_is_empty">基站缓存数据为空</string>
    <string name="geek_sdk_log_cell_found_other_scene_so_current_leave">已经发现新的基站场景，所以%1$s确认离店</string>
    <string name="geek_sdk_log_cell_has_leave_shop">%1$s基站确认离店</string>
    <string name="geek_sdk_log_cell_has_resident_shop">基站已经驻店，不重复进店</string>
    <string name="geek_sdk_log_cell_leave_shop_because_context_is_null">上下文为空，基站判断为离店</string>
    <string name="geek_sdk_log_cell_list_is_empty">cellList为空，直接判断基站离店</string>
    <string name="geek_sdk_log_cell_md5_same_do_not_update">明文数据一致，不更新基站缓存</string>
    <string name="geek_sdk_log_cell_scene_delaying_leave">%1$s当前正在基站延时驻店</string>
    <string name="geek_sdk_log_cell_scene_more_than_delay_leave_step">基站延时离店时 满足步数要求,%1$s确认离店</string>
    <string name="geek_sdk_log_cell_scene_more_than_delay_leave_time">超出基站延时离店时间,%1$s确认离店</string>
    <string name="geek_sdk_log_cell_step_checking">基站：步数变化：当前步数%1$d</string>
    <string name="geek_sdk_log_cell_still_connect">%1$s基站还没有离店</string>
    <string name="geek_sdk_log_cell_with_cell">%1$s基站包含场景：%2$s</string>
    <string name="geek_sdk_log_cell_with_scene">包含有场景的基站，发起进店</string>
    <string name="geek_sdk_log_change_fence_location_gap">五次定位中有三次距离小于50米，最小定位间隔时间修改为：%1$d</string>
    <string name="geek_sdk_log_check_if_there_is_a_problem_with_local_cache_file_encryption">检测本地缓存文件加密是否有问题</string>
    <string name="geek_sdk_log_check_move_result">是否运动:%1$s</string>
    <string name="geek_sdk_log_check_nearby_scene_time">检测附近场景次数:%1$d</string>
    <string name="geek_sdk_log_check_remain_scene_to_select_best_level_scene_switch">检测剩余驻店的场景,选择最强的一个场景进行回切场景:%1$s[SSID:%2$s,level:%3$s]</string>
    <string name="geek_sdk_log_check_sensor">是否有加速度传感器:%1$s</string>
    <string name="geek_sdk_log_check_sqrt_result">检测方差:2秒内满足标准的方差个数为:%1$d,总的个数为:%2$d,本次的百分占比为:%3$f,达标百分比为:%4$d</string>
    <string name="geek_sdk_log_check_step_in_two_second">检测步数:2秒内走的步数为:%1$d</string>
    <string name="geek_sdk_log_check_wifi_and_scan_switch_result">检测WiFi开关和扫描开关结果:%1$s</string>
    <string name="geek_sdk_log_clear_cell_cache">清空基站poi缓存</string>
    <string name="geek_sdk_log_clear_fence_location">清空围栏定位</string>
    <string name="geek_sdk_log_collection_switch_off_not_collected">[蓝牙]收集开关关闭，不收集</string>
    <string name="geek_sdk_log_collection_switch_on_bluetooth">[进店后]收集蓝牙开关打开，开始收集蓝牙</string>
    <string name="geek_sdk_log_collection_switch_on_wifi_fingerprint">[进店后]收集wifi指纹开关打开，开始收集wifi指纹</string>
    <string name="geek_sdk_log_connect_failed">连接失败</string>
    <string name="geek_sdk_log_connect_result">连接WiFi结果:%1$d</string>
    <string name="geek_sdk_log_connectable_ap_count">可连接的WiFi个数:%1$d</string>
    <string name="geek_sdk_log_connected_wifi_is_black_ap_so_remove_from_map">当前连接的WiFi已在黑名单里,不再参与进店逻辑的判断</string>
    <string name="geek_sdk_log_connecting_ap">正在连接%1$s[BSSID:%2$s,security:%3$d]</string>
    <string name="geek_sdk_log_contains_cell">基站%1$s还没有断开，不离店</string>
    <string name="geek_sdk_log_context_is_null">上下文为空，服务可能出现异常</string>
    <string name="geek_sdk_log_context_null_when_get_uuid">获取UUID的时候context为空</string>
    <string name="geek_sdk_log_continue_to_get_scene">用%1$s继续请求服务器获取场景</string>
    <string name="geek_sdk_log_continuous_scan_five_count_not_to_scan_wifi">已经连续扫描5次,不再主动扫描wifi</string>
    <string name="geek_sdk_log_copy_error">[缓存]拷贝文件出错</string>
    <string name="geek_sdk_log_current_all_leave_shop_contain_current_show_scene_to_notify_callback">当前离店的所有场景包括当前显示的场景,通知回调</string>
    <string name="geek_sdk_log_current_all_leave_shop_no_contain_current_show_scene_to_notify_callback">当前离店的所有场景不包括当前显示的场景,不通知离店回调</string>
    <string name="geek_sdk_log_current_all_resident_scene">遍历所有驻店场景时,当前获取到的场景:%2$s[SSID:%1$s]</string>
    <string name="geek_sdk_log_current_all_resident_scene_by_fence">遍历所有驻店场景时,当前获取到的场景:%1$s[通过围栏识别]</string>
    <string name="geek_sdk_log_current_connected_wifi_has_scene_data">当前连接的WiFi有场景数据</string>
    <string name="geek_sdk_log_current_conntected_wifi">当前已连接%1$s</string>
    <string name="geek_sdk_log_current_data_null_not_fence_check">当前驻店数据为空不进行围栏检测</string>
    <string name="geek_sdk_log_current_logic_state">当前识别逻辑的状态:%1$s</string>
    <string name="geek_sdk_log_current_show_scene">当前展示的场景:%1$s</string>
    <string name="geek_sdk_log_current_state_is_motionless_fail_to_leave_shop_reset_data">此时处于静止状态,离店不成功,重置数据并重新开始检测</string>
    <string name="geek_sdk_log_delete_ap_cache">diff删除ap缓存</string>
    <string name="geek_sdk_log_do_not_enter_shop_logic_because_the_network_has_not_changed_and_the_time_is_less_than_the_retry_time">进店时,由于网络没有变化同时也未到重试时间,不执行获取场景识别逻辑</string>
    <string name="geek_sdk_log_do_not_enter_shop_logic_because_the_network_has_not_changed_and_the_time_is_less_than_the_retry_time_when_switch">切换时,由于网络没有变化同时也未到重试时间,不执行获取场景识别逻辑</string>
    <string name="geek_sdk_log_empty_data_when_get_scene">获取场景时,服务器直接返回空数据</string>
    <string name="geek_sdk_log_empty_scene_when_get_scene">获取场景时,返回空的场景信息</string>
    <string name="geek_sdk_log_empty_service_when_get_scene">获取场景时,返回空的服务内容</string>
    <string name="geek_sdk_log_enter_shop_data_is_empty">进店数据为空</string>
    <string name="geek_sdk_log_error_info">出现异常:%1$s</string>
    <string name="geek_sdk_log_error_net_when_request">请求场景时出现网络异常,重新执行进店逻辑</string>
    <string name="geek_sdk_log_exist_same_ap_so_wifi_no_dismiss">%1$s[BSSID:%2$s]还存在,没有丢失</string>
    <string name="geek_sdk_log_exist_same_ssid_so_wifi_no_dismiss">%1$s还存在,没有丢失</string>
    <string name="geek_sdk_log_fail_to_get_scene">获取场景时,获取场景卡失败</string>
    <string name="geek_sdk_log_fail_to_get_scene_and_check_other_ap_to_request">此时返回空场景,如果此时还有其他WiFi符合进店逻辑,就立马去请求,不等待下一次回调</string>
    <string name="geek_sdk_log_fail_to_get_scene_and_no_other_ap_meet_enter_shop_logic">此时返回空场景并且没有其他WiFi符合进店逻辑</string>
    <string name="geek_sdk_log_fence_cache_content_is_empty">围栏缓存内容为空</string>
    <string name="geek_sdk_log_fence_cache_memory">[围栏缓存(内存)]缓存个数：%1$d</string>
    <string name="geek_sdk_log_fence_cache_not_loaded">围栏缓存未加载完成，此次快速识别失败</string>
    <string name="geek_sdk_log_fence_check">%1$s判断围栏%2$b</string>
    <string name="geek_sdk_log_fence_check_correct">%1$s判断围栏(修正后)%2$b</string>
    <string name="geek_sdk_log_fence_distance_buffer">因为距离围栏的最短距离不超过%1$d米,所以判断为还在围栏中</string>
    <string name="geek_sdk_log_fence_find_shop">通过围栏找到场景id:%1$s</string>
    <string name="geek_sdk_log_fence_find_shop_but_resident">通过围栏找到场景id:%1$s,已经驻店，不向服务器获取场景卡</string>
    <string name="geek_sdk_log_fence_leave_and_no_wifi_leave_shop">检测到当前wifi列表为空，直接离店</string>
    <string name="geek_sdk_log_fence_location_callback">围栏定位回调</string>
    <string name="geek_sdk_log_fence_location_retry_failed_times">围栏重试定位失败次数:%1$d</string>
    <string name="geek_sdk_log_fence_location_retry_failed_twice_use_gps">围栏网络定位失败两次，启用GPS定位重试</string>
    <string name="geek_sdk_log_fence_location_retry_times">围栏重试离店定位次数：%1$d</string>
    <string name="geek_sdk_log_fence_location_success">围栏定位成功：%1$f,%2$f</string>
    <string name="geek_sdk_log_fence_location_success_correct">修正后的围栏经纬度：%1$f,%2$f</string>
    <string name="geek_sdk_log_fence_md5_same_do_not_update">明文数据一致，不更新围栏缓存</string>
    <string name="geek_sdk_log_fence_memory_data">[围栏缓存(内存)]%1$s</string>
    <string name="geek_sdk_log_fence_not_on_check_need_scan_wifi">当前有离店趋势的场景不在进行围栏或基站检测，主动扫描wifi</string>
    <string name="geek_sdk_log_fence_on_check_not_scan_wifi">当前有离店趋势的场景正在进行围栏或基站检测，不主动扫描wifi</string>
    <string name="geek_sdk_log_fence_request_location_failed_no_retry">围栏GPS重试失败，不再重试，本次快速识别失败</string>
    <string name="geek_sdk_log_fence_request_location_failed_retry">围栏定位失败，快速识别失败,重试</string>
    <string name="geek_sdk_log_fence_retry_much_time_leave_shop">重试次数过多，定位失败直接判断为离开围栏</string>
    <string name="geek_sdk_log_fence_scene_has_wifi_not_to_location">包含围栏场景wifi,不发起定位</string>
    <string name="geek_sdk_log_fill_data">%1$s填充数据</string>
    <string name="geek_sdk_log_filter_duplicate_scene">过滤重复的场景</string>
    <string name="geek_sdk_log_filter_rule">加载过滤规则</string>
    <string name="geek_sdk_log_filter_wifi_order_to_level_threshold_level">根据WiFi的信号值过滤[信号门槛值:%1$d]</string>
    <string name="geek_sdk_log_fingerprint_file_and_total">[指纹]成功保存了指纹文件：%1$s，共%2$d条指纹</string>
    <string name="geek_sdk_log_fingerprint_file_save">[指纹]保存了指纹文件%1$d个</string>
    <string name="geek_sdk_log_fingerprint_save">[指纹]开始保存指纹文件，指纹：%1$d个</string>
    <string name="geek_sdk_log_fingerprint_uploading">正在上传指纹，所以不做收集处理</string>
    <string name="geek_sdk_log_finish_check_result">运动检测完毕,结果:%1$s,是否处于运动状态:%2$s</string>
    <string name="geek_sdk_log_first_or_second_sample_data_null_to_think_tranquil">第一个样本或第二个样本数据为空,视为处于静止</string>
    <string name="geek_sdk_log_found_better_wifi_during_leave_shop">离店时发现%2$s信号强度大于%1$d,直接进入驻店逻辑</string>
    <string name="geek_sdk_log_geometric_mean">ssid:%1$s,几何平均数:-%2$f</string>
    <string name="geek_sdk_log_get_ap_cache_size">加载ap缓存个数:%1$d</string>
    <string name="geek_sdk_log_get_best_level_in_resident_card_map">遍历所有驻店场景,当前获取到的场景:%4$s[SSID:%1$s,BSSID:%2$s,level:%3$d]</string>
    <string name="geek_sdk_log_get_final_ap_cache">得到最终的ap缓存为:%1$s</string>
    <string name="geek_sdk_log_get_ssid_cache_size">加载ssid缓存个数:%1$d</string>
    <string name="geek_sdk_log_handle_response_exception">处理返回内容异常:%1$s</string>
    <string name="geek_sdk_log_handle_wifi_callback">达到延时处理回调时间，处理wifi回调结果</string>
    <string name="geek_sdk_log_has_reached_the_cycle">已经达到%1$d次周期</string>
    <string name="geek_sdk_log_in_fence">%1$s还在围栏中</string>
    <string name="geek_sdk_log_init_result">初始化结果:%1$d</string>
    <string name="geek_sdk_log_initiative_scan_wifi">主动发起扫描wifi</string>
    <string name="geek_sdk_log_is_already_in_query_or_leave_shop_state">当前已经处于查询场景数据或者离店状态</string>
    <string name="geek_sdk_log_is_low_power_mode">是否开启了低功耗模式:%1$s</string>
    <string name="geek_sdk_log_is_motionless_to_reset_data">此时为静止状态,重置数据</string>
    <string name="geek_sdk_log_is_move_to_switch_scene">此时为运动状态,切换场景</string>
    <string name="geek_sdk_log_last_check_location_info_result_is">位置信息开关:%1$s</string>
    <string name="geek_sdk_log_last_check_result_is_all_close_this_time_check_result_is">上次检测到WiFi开关和扫描开关同时关闭,此时检测WiFi开关和扫描开关结果:%1$s</string>
    <string name="geek_sdk_log_last_fence_location_success_time">围栏距离最后一次定位成功的时间是：%1$d秒</string>
    <string name="geek_sdk_log_leave_fence">%1$s已经离开围栏</string>
    <string name="geek_sdk_log_leave_shop_check_time">离店检测次数:%1$d</string>
    <string name="geek_sdk_log_leave_shop_final_result">离店最终结果:%1$s确认离店!</string>
    <string name="geek_sdk_log_leave_shop_scene_not_include_current_scene_return_null">离店的场景不包括当前显示的场景,则返回null,场景不进行回切</string>
    <string name="geek_sdk_log_leave_shop_ssid_check">离店检测,%1$s丢失了%2$d次</string>
    <string name="geek_sdk_log_load_ap_cache">加载ap缓存</string>
    <string name="geek_sdk_log_load_cell_cache_from_file">从文件中加载基站缓存</string>
    <string name="geek_sdk_log_load_fence_cache_from_file">从文件中读取围栏缓存</string>
    <string name="geek_sdk_log_load_fence_cache_from_file_is_empty">从文件中读取围栏缓存为空！</string>
    <string name="geek_sdk_log_load_fence_cache_from_file_num">从文件中读取围栏缓存成功，缓存个数：%1$d</string>
    <string name="geek_sdk_log_load_ssid_cache">加载ssid缓存</string>
    <string name="geek_sdk_log_loaded_cell_cache">拉取的基站缓存数量：%1$s</string>
    <string name="geek_sdk_log_loaded_fence_cache">拉取的围栏缓存：%1$s</string>
    <string name="geek_sdk_log_location_time_out">定位超时</string>
    <string name="geek_sdk_log_lose_count">%1$s丢失次数： %2$d</string>
    <string name="geek_sdk_log_meet_leave_shop_and_stop_leave_shop_move_check">之前已经开始离店,停止离店的运动检测,切换逻辑优先于离店逻辑</string>
    <string name="geek_sdk_log_meet_leave_shop_condition">满足离店条件</string>
    <string name="geek_sdk_log_meet_switch_scene_condition">满足了场景切换的条件</string>
    <string name="geek_sdk_log_meet_the_relevant_conditions_to_scan_wifi">息屏满足相关条件,主动扫描WiFi</string>
    <string name="geek_sdk_log_meet_wifi_switch_scene_condition">满足切换条件:%1$s</string>
    <string name="geek_sdk_log_min_fence_location_gap">当前围栏定位的最小间隔时间：%1$d</string>
    <string name="geek_sdk_log_mode">当前模式:%1$s</string>
    <string name="geek_sdk_log_move_check_state_and_query_sqrt_average">运动检测状态:%1$d,平均方差:%2$f</string>
    <string name="geek_sdk_log_nearby_has_other_scene_to_execute_switch_logic_when_leave_shop">离店时检测到附近有其他场景,不执行离店逻辑,继续走切换逻辑</string>
    <string name="geek_sdk_log_nearby_no_has_other_scene_when_leave_shop">离店时附近没有其他场景</string>
    <string name="geek_sdk_log_nearby_poi_url">返回附近场景url:%1$s</string>
    <string name="geek_sdk_log_network_error">网络异常:%1$s</string>
    <string name="geek_sdk_log_network_error_code">网络异常返回码:%1$d</string>
    <string name="geek_sdk_log_network_error_when_get_scene">获取场景时,网络出现异常</string>
    <string name="geek_sdk_log_network_has_changed">网络发生了变化</string>
    <string name="geek_sdk_log_no_cache">本地没有缓存</string>
    <string name="geek_sdk_log_no_calculate_sqrt_average_is_substandard">没有计算出平均方差则视为不达标</string>
    <string name="geek_sdk_log_no_cell_data_from_server">没有下发基站数据</string>
    <string name="geek_sdk_log_no_cell_with_scene_after_filter_blacklist">过滤基站黑名单后，没有符合进店逻辑的基站</string>
    <string name="geek_sdk_log_no_connectable_wifi">没有可连接的WiFi</string>
    <string name="geek_sdk_log_no_fence_data_from_server">没有下发围栏数据</string>
    <string name="geek_sdk_log_no_fingerprint_files">[指纹]当前没有找到指纹文件</string>
    <string name="geek_sdk_log_no_scanning_to_wifi">%1$s没有扫描到WiFi</string>
    <string name="geek_sdk_log_no_scene_in_fence_scan_wifi">没有在围栏中的场景,扫描wifi</string>
    <string name="geek_sdk_log_no_scene_on_fence">没有场景在围栏中，快速识别失败</string>
    <string name="geek_sdk_log_no_wifi_scan_fence">当前wifi列表为空，主动开始检测围栏</string>
    <string name="geek_sdk_log_not_enter_shop_history_and_now_is_foreground_not_execute_sleep_so_start_scan_scene">无进店历史,此时处于前台,不执行休眠,开始扫描附近场景</string>
    <string name="geek_sdk_log_not_locate_current_city">当前定位不到城市</string>
    <string name="geek_sdk_log_not_meet_wifi_switch_scene_condition">不满足切换条件:%1$s</string>
    <string name="geek_sdk_log_not_scan_wifi_during_period_is_move">%1$s,周期内没扫描到场景wifi,直接判定为运动状态</string>
    <string name="geek_sdk_log_not_yet_reached_a_very_strong_number_of_detection_signals">%1$s还没达到检测信号非常强的次数</string>
    <string name="geek_sdk_log_now_is_foreground_not_execute_sleep_so_start_scan_scene_during_sleep">休眠期间此时处于前台,不执行休眠,开始扫描附近场景</string>
    <string name="geek_sdk_log_null_current_ap_to_leave_shop_logic">当前驻店数据为null,执行离店,开始进店逻辑判断</string>
    <string name="geek_sdk_log_off_screen_not_work_and_stop_move_check_reset_data">息屏不做处理,同时停止运动检测和重置切换逻辑相关数据</string>
    <string name="geek_sdk_log_okhttp_response_error">okhttp返回的错误为:%1$s</string>
    <string name="geek_sdk_log_parse_ap_cache_null">解析到ap缓存为空或者个数为0</string>
    <string name="geek_sdk_log_parse_error_when_get_scene">获取场景时,解析数据出现异常</string>
    <string name="geek_sdk_log_parse_ssid_cache_null">解析到ssid缓存为空或者个数为0</string>
    <string name="geek_sdk_log_query_cell_scene_card_from_cache">从poi缓存中获取基站场景卡数据</string>
    <string name="geek_sdk_log_query_cell_scene_card_from_server">从服务器获取基站场景卡数据</string>
    <string name="geek_sdk_log_querying_scene_by_cell">当前正在通过基站获取场景数据</string>
    <string name="geek_sdk_log_quick_scanning">围栏当前正在快速识别当中</string>
    <string name="geek_sdk_log_reach_leave_shop_condition">所有场景都已离店,重新执行进店</string>
    <string name="geek_sdk_log_reach_other_scene_appear_condition_when_leave_shop">离店时其他场景满足连续出现的条件</string>
    <string name="geek_sdk_log_reach_three_check_not_meet_other_scene_appear_condition">达到3次周期,不满足其他场景出现的条件</string>
    <string name="geek_sdk_log_reach_three_leave_shop_check_and_not_find_leave_shop_scene">达到3次检测离店周期,未发现离店的场景,重新检测</string>
    <string name="geek_sdk_log_read_ap_cache_data">读取ap全量缓存数据</string>
    <string name="geek_sdk_log_read_ap_cache_diff_data">读取ap缓存diff数据</string>
    <string name="geek_sdk_log_receive_wifi_callback">接收到wifi回调</string>
    <string name="geek_sdk_log_redo_enter_shop_logic_because_the_network_has_changed_or_the_time_is_more_than_the_retry_time">进店时,由于网络发生了变化或者到了重试时间,重新执行获取场景识别逻辑</string>
    <string name="geek_sdk_log_redo_enter_shop_logic_because_the_network_has_changed_or_the_time_is_more_than_the_retry_time_when_switch">切换时,由于网络发生了变化或者到了重试时间,重新执行获取场景识别逻辑</string>
    <string name="geek_sdk_log_register_wifi_callback_observer">注册WiFi回调观察者</string>
    <string name="geek_sdk_log_remaining_level_scene">剩余等级的场景：%1$s</string>
    <string name="geek_sdk_log_remains_wifi_details">切换时,过滤几个条件后,剩余的WiFi有%1$s[BSSID:%2$s,level:%3$d]</string>
    <string name="geek_sdk_log_remove_location">移除定位</string>
    <string name="geek_sdk_log_remove_scene_from_class_scene_card_map">从classSceneCardMap中移除场景：%1$s</string>
    <string name="geek_sdk_log_remove_ssid">移除:%1$s</string>
    <string name="geek_sdk_log_request_location">请求定位</string>
    <string name="geek_sdk_log_request_params">"客户端请求URL:%1$s
请求参数:%2$s"</string>
    <string name="geek_sdk_log_reset_enter_shop_data_when_leave_shop">由于距离上次处理WiFi回调时间超过%1$s,因此重置进店数据</string>
    <string name="geek_sdk_log_reset_leave_shop_data_when_leave_shop">由于距离上次处理WiFi回调时间超过%1$s,因此重置离店数据</string>
    <string name="geek_sdk_log_reset_move_check_state">重置运动检测状态</string>
    <string name="geek_sdk_log_reset_the_wifi_scan_acceleration_policy_data">重置wifi扫描加速策略数据</string>
    <string name="geek_sdk_log_resident_scene_reach_ten_not_to_check_other_scene">驻店场景已经达到10个,不检测附近其他场景</string>
    <string name="geek_sdk_log_response_body_empty">返回内容body为空</string>
    <string name="geek_sdk_log_response_empty">返回内容为空</string>
    <string name="geek_sdk_log_response_result">服务器响应:%1$s</string>
    <string name="geek_sdk_log_restart_enter_shop">重新执行进店逻辑</string>
    <string name="geek_sdk_log_run_background_model_enter_shop">[进店时]当前为后台模式</string>
    <string name="geek_sdk_log_run_foreground_background_model_enter_shop">当前为前后台模式</string>
    <string name="geek_sdk_log_run_foreground_model_enter_shop">[进店时]当前为前台模式</string>
    <string name="geek_sdk_log_run_model_is_foreground">[进店时]当前运行模式是否是前台:%1$s</string>
    <string name="geek_sdk_log_save_cell_cache_success_update_md5">保存基站缓存成功，更新MD5</string>
    <string name="geek_sdk_log_save_fence_cache_success_update_md5">保存围栏缓存成功，更新MD5</string>
    <string name="geek_sdk_log_scan_wifi">间隔%1$d毫秒主动扫描wifi</string>
    <string name="geek_sdk_log_scan_wifi_immediately">立即扫描WiFi</string>
    <string name="geek_sdk_log_scene_data_not_found">没有找到场景卡数据</string>
    <string name="geek_sdk_log_scene_join_fence_check">%1$s加入到围栏的离店判断中</string>
    <string name="geek_sdk_log_scene_leave_fence">%1$s离开围栏，确认离店</string>
    <string name="geek_sdk_log_scene_still_in_fence">%1$s还在围栏中，不离店</string>
    <string name="geek_sdk_log_screen_off">屏幕状态发生改变,此时屏幕熄屏</string>
    <string name="geek_sdk_log_screen_off_and_is_not_leave_shop_state">息屏,此时不处于离店逻辑,不往下操作</string>
    <string name="geek_sdk_log_screen_off_and_scan_wifi_after_five_mins_at_leave_shop_state">息屏状态下,并且处于离店逻辑,每隔%1$d主动扫描WiFi</string>
    <string name="geek_sdk_log_screen_off_so_return">熄屏状态不再进行进店逻辑判断!</string>
    <string name="geek_sdk_log_screen_on">屏幕状态发生改变,此时屏幕亮屏</string>
    <string name="geek_sdk_log_screen_on_scan">亮屏需要扫描wifi:%1$s</string>
    <string name="geek_sdk_log_screen_on_to_remove_scan">亮屏移除定时扫描</string>
    <string name="geek_sdk_log_send_scene_ap_num">[场景日志]收集到的ap数为%1$d,包含poiId的个数为%2$d</string>
    <string name="geek_sdk_log_send_scene_log_is_operating_send">[场景日志]正在处理场景日志</string>
    <string name="geek_sdk_log_send_scene_log_judge_network_available">[场景日志]网络是否通畅?%1$s</string>
    <string name="geek_sdk_log_send_scene_log_judge_wifi_connected">[场景日志]WiFi是否已经连接?%1$s</string>
    <string name="geek_sdk_log_send_scene_log_not_meet_condition">[场景日志]没有满足上传日志条件</string>
    <string name="geek_sdk_log_send_scene_log_not_meet_interval_condition">[场景日志]没有满足上传日志间隔时间条件</string>
    <string name="geek_sdk_log_send_scene_log_not_send_log">[场景日志]没有上传日志,可能日志内容为空</string>
    <string name="geek_sdk_log_send_scene_log_url_and_data_size">[场景日志]日志接口%1$s,数据大小%2$d</string>
    <string name="geek_sdk_log_should_delay_handle_wifi_callback">需要延时处理wifi回调:%1$s</string>
    <string name="geek_sdk_log_should_stop_scan_thread">是否应该停止扫描线程:%1$s</string>
    <string name="geek_sdk_log_show_scene_from_cache_data">从缓存中获取的场景是:%1$s</string>
    <string name="geek_sdk_log_show_scene_from_server">从服务器获取的场景是:%1$s</string>
    <string name="geek_sdk_log_size">第一个共同样本的个数:%1$d,第二个共同样本的个数:%2$d,相同样本的个数:%3$d</string>
    <string name="geek_sdk_log_skip_at_shop_logic">没有启用驻店逻辑,%1$s直接进入驻店状态</string>
    <string name="geek_sdk_log_specific_to_gome_open_scan_thread">针对国美,开启扫描线程</string>
    <string name="geek_sdk_log_specific_to_gome_stop_scan_thread">针对国美,停止扫描线程</string>
    <string name="geek_sdk_log_ssid_at_shop">%1$s符合驻店逻辑条件,进入驻店状态</string>
    <string name="geek_sdk_log_ssid_at_shop_start_to_query_scene_data">%1$s已驻店,开始查询场景服务</string>
    <string name="geek_sdk_log_ssid_cache_file_data_is_null">ssid缓存文件数据为空</string>
    <string name="geek_sdk_log_ssid_cache_file_encryption_and_decryption_error">ssid缓存文件加解密出错</string>
    <string name="geek_sdk_log_ssid_data_cache_file_error">[SSID列表]position=%1$s,value=null</string>
    <string name="geek_sdk_log_ssid_data_parse_error">[SSID列表]等于null或者size=0</string>
    <string name="geek_sdk_log_ssid_data_response">拉取SSID缓存:%1$s</string>
    <string name="geek_sdk_log_ssid_data_version_same">[SSID缓存]版本号和明文md5一致,不更新SSID缓存</string>
    <string name="geek_sdk_log_ssid_enter_shop">%1$s符合进店逻辑条件,开始进入驻店逻辑的判断</string>
    <string name="geek_sdk_log_ssid_file_damage_request_server">ssid缓存文件已经损坏,重新请求服务器</string>
    <string name="geek_sdk_log_ssid_has_been_removed_because_of_beyond_max_record_interval_time">%1$s由于两次识别时间超过最大间隔时间而被移除</string>
    <string name="geek_sdk_log_ssid_is_black_ap">%1$s[%2$s]已被拉黑</string>
    <string name="geek_sdk_log_ssid_is_not_in_the_wifi_list_and_gives_up_to_get_scene_data">%1$s不在WiFi列表中,放弃获取场景数据</string>
    <string name="geek_sdk_log_ssid_level_always_strong_enter_shop">%1$s信号值一直非常强,符合进店逻辑条件,开始进入驻店逻辑的判断</string>
    <string name="geek_sdk_log_ssid_memory_data">[SSID缓存(内存)]%1$s</string>
    <string name="geek_sdk_log_ssid_next_enter_shop_logic">%1$s未满足进店逻辑条件</string>
    <string name="geek_sdk_log_ssid_remove_from_map">%1$s不符合进店逻辑条件,已被移除</string>
    <string name="geek_sdk_log_start_calculate_sqrt_average">开始计算平均方差</string>
    <string name="geek_sdk_log_start_cell_step_check">开始基站延时驻店步数检测</string>
    <string name="geek_sdk_log_start_check_wifi_and_scan_switch">开始定时检测WiFi开关和扫描开关是否同时关闭</string>
    <string name="geek_sdk_log_start_fence_success_dont_request">围栏已经在定位当中，所以不再主动请求定位</string>
    <string name="geek_sdk_log_start_handle_ap_cache_data">开始处理服务端返回的ap缓存数据</string>
    <string name="geek_sdk_log_start_init">开始初始化</string>
    <string name="geek_sdk_log_start_move_check">开始运动检测</string>
    <string name="geek_sdk_log_start_open_heart_beat">开启心跳机制</string>
    <string name="geek_sdk_log_start_scan_thread">休眠时间结束,开启扫描,执行进店逻辑</string>
    <string name="geek_sdk_log_start_to_scan_scene">开始扫描场景</string>
    <string name="geek_sdk_log_stop_cell_step_check">停止基站延时驻店步数检测</string>
    <string name="geek_sdk_log_stop_fence">停止围栏检测</string>
    <string name="geek_sdk_log_stop_fence_location_param">围栏当前定位参数，时间：%1$d,距离：%2$f,定位模式：%3$s</string>
    <string name="geek_sdk_log_stop_fence_location_screen_off">熄屏状态下停止围栏定位检测</string>
    <string name="geek_sdk_log_stop_fence_no_resident">当前没有围栏驻店场景，停止检测</string>
    <string name="geek_sdk_log_stop_move_check">停止运动检测</string>
    <string name="geek_sdk_log_stop_scan_thread">%1$d时间范围内,无进店历史记录,执行休眠%2$d,停止扫描</string>
    <string name="geek_sdk_log_stop_to_scan_scene">停止扫描场景</string>
    <string name="geek_sdk_log_stop_wifi_callback_observer">停止WiFi回调观察者</string>
    <string name="geek_sdk_log_success_location">定位成功</string>
    <string name="geek_sdk_log_success_to_calculate_sqrt_average">计算成功,静止时得到的平均方差为:%1$f</string>
    <string name="geek_sdk_log_success_to_location">定位成功:%1$f,%2$f</string>
    <string name="geek_sdk_log_success_to_release">执行了SDK的release方法</string>
    <string name="geek_sdk_log_success_to_save_cache_file_to_update_version">保存缓存文件成功,更新版本号</string>
    <string name="geek_sdk_log_success_to_update_first_sample_data">成功更新第一个样本</string>
    <string name="geek_sdk_log_switch_check_ssid_appear_count">切换检测次数:%1$d,%2$s出现的次数:%3$d</string>
    <string name="geek_sdk_log_switch_to_city">切换城市:%1$s</string>
    <string name="geek_sdk_log_the_check_count_reach_standard">检测次数:%1$d,达标次数:%2$d</string>
    <string name="geek_sdk_log_the_collection_switch_is_turned_on_and_the_request_scene_card_is_collected_once">[蓝牙]收集开关打开,请求场景卡收集一次</string>
    <string name="geek_sdk_log_the_number_of_retries_has_reached_twice_no_retry">重试次数已经达到两次,不再重试</string>
    <string name="geek_sdk_log_the_number_of_times_that_have_been_very_strong">一直非常强的次数是:%1$d</string>
    <string name="geek_sdk_log_the_number_of_times_the_detection_signal_is_very_strong">达到检测信号非常强的次数:%1$d</string>
    <string name="geek_sdk_log_the_residency_scene_data_is_empty">驻店场景数据为空</string>
    <string name="geek_sdk_log_the_scene_get_scene_by_connect_wifi_at_this_time_connected_wifi_is_different_or_disconnect_so_confirm_leave_shop">场景[%1$s]是通过WiFi连接识别,此时连接的wifi不相同或已断开连接,确认离店</string>
    <string name="geek_sdk_log_the_scene_get_scene_by_connect_wifi_at_this_time_this_wifi_not_disconnect_so_fail_to_leave_shop">场景[%1$s]是通过WiFi连接识别,此时该WiFi还没断开,不能离店</string>
    <string name="geek_sdk_log_the_scenes_of_the_later_level_are_added_to_the_resident_data">把%1$s后面等级的场景：%2$s添加到驻店数据中</string>
    <string name="geek_sdk_log_there_are_only_one_hotspot_in_scenario_where_multiple_parties_have_one_side">计算多方有一方的场景只有一个热点,比较最大值</string>
    <string name="geek_sdk_log_this_time_leave_shop_result">此次离店检测,%1$s没有丢失</string>
    <string name="geek_sdk_log_time_to_collect_fingerprint_no_resident_shop">满足不驻店指纹收集条件，开始收集指纹</string>
    <string name="geek_sdk_log_time_to_fence_location">满足围栏定位条件，发起围栏定位</string>
    <string name="geek_sdk_log_traversal_wifi_to_check_enter_shop_logic">开始遍历所有符合条件的WiFi,共%1$d个执行进店逻辑的判断</string>
    <string name="geek_sdk_log_traverse_all_ssid_reach_enter_shop">当前满足进店逻辑且可用于请求服务器的SSID:%1$s[level:%2$d]</string>
    <string name="geek_sdk_log_traverse_ssid_map">扫描次数:%1$d,遍历ssidMap,%2$s出现次数:%3$d</string>
    <string name="geek_sdk_log_two_callback_time_short">两次回调间隔处理时间过短</string>
    <string name="geek_sdk_log_two_check_result_is_close_to_handle_unusual_leave_shop">两次检测WiFi开关和扫描开关都是处于关闭状态,直接当作异常离店处理</string>
    <string name="geek_sdk_log_two_sample_data_calculate_result">两个样本交集个数为:%1$d,全集个数为:%2$d,无交集个数为:%3$d</string>
    <string name="geek_sdk_log_two_sample_data_final_similarity_result">相似度的最终结果为:%1$f</string>
    <string name="geek_sdk_log_two_sample_data_intersection_size_zero_think_move">两个样本交集个数为0,视为处于运动</string>
    <string name="geek_sdk_log_two_sample_data_similarity_no_intersection_percent">计算结果,相似度为:%1$f,无交集占比:%2$f</string>
    <string name="geek_sdk_log_two_sample_data_size_is_zero_to_think_tranquil">两个样本都没有获取到WiFi数据,视为处于静止</string>
    <string name="geek_sdk_log_two_sample_data_wifi_size">第一个样本的个数为:%1$d,第二个样本的个数为:%2$d</string>
    <string name="geek_sdk_log_update_state">更新识别逻辑状态</string>
    <string name="geek_sdk_log_update_to_enter_shop">更新为进店状态</string>
    <string name="geek_sdk_log_update_to_leave_shop">更新为离店状态</string>
    <string name="geek_sdk_log_use_fence_enter_shop">调用围栏进店</string>
    <string name="geek_sdk_log_wifi_callback_achieve_times">%1$d毫秒内回调次数达到%2$d次</string>
    <string name="geek_sdk_log_wifi_callback_not_achieve_times">回调次数不满足延时处理要求</string>
    <string name="geek_sdk_log_wifi_callback_too_much">因为回调过于频繁，暂时不处理回调数据</string>
    <string name="geek_sdk_log_wifi_closed_when_connect_wifi">连接WiFi时WiFi已关闭</string>
    <string name="geek_sdk_log_wifi_detail_on_at_shop_logic">%1$s第%2$d次检测,共稳定出现%3$d次(信号强度大于%4$d)</string>
    <string name="geek_sdk_log_wifi_detail_on_enter_shop_logic">%1$s第%2$d次检测,共出现%3$d次信号增强</string>
    <string name="geek_sdk_log_wifi_has_scene_data_found">发现有场景的WiFi</string>
    <string name="geek_sdk_log_wifi_has_scene_data_not_found">没找到有场景的WiFi</string>
    <string name="geek_sdk_log_wifi_is_till">%1$sWiFi还在</string>
    <string name="geek_sdk_log_wifi_list_after_filter_black_ap_is_null">去除黑名单后,已无WiFi可用</string>
    <string name="geek_sdk_log_wifi_list_after_filter_duplicate">去除重复后的WiFi列表:</string>
    <string name="geek_sdk_log_wifi_list_is_empty">wifi列表为空</string>
    <string name="geek_sdk_log_wifi_on_at_shop_logic">%1$s正处于驻店逻辑判断中</string>
    <string name="geek_sdk_log_wifi_on_enter_shop_logic">%1$s正处于进店逻辑判断中</string>
    <string name="geek_sdk_log_wifi_reach_max_check_count">%1$s达到最大检测次数,不再参与进店逻辑的判断</string>
    <string name="geek_sdk_log_wifi_scan_result">WiFi扫描结果:</string>
    <string name="geek_sdk_log_wifi_scan_result_detail">%6$d.%1$s[BSSID:%2$s,capabilities:%3$s,level:%4$d,frequency:%5$d]</string>
    <string name="geek_sdk_log_wifi_scan_result_is_as_same_as_last_time">本次WiFi回调获取到的列表和上次的一样,因此不处理识别逻辑</string>
    <string name="geek_sdk_screen_off_not_to_location">此时息屏不去主动定位</string>
    <string name="sharedream_lib_name">sharedream-lib-base</string>
    <string name="sharedream_ticker">有新的通知</string>
    <string name="sharedream_title">欢迎来到%1$s！</string>
</resources>
